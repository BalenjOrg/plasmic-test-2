// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ih3hS8MosckJQS3c7K8pr
// Component: xndf4yRQJytb

import * as React from "react";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: ih3hS8MosckJQS3c7K8pr/projectcss
import sty from "./PlasmicAnswer.module.css"; // plasmic-import: xndf4yRQJytb/css

import ShareSvgrepoComsvgIcon from "./icons/PlasmicIcon__ShareSvgrepoComsvg"; // plasmic-import: 1fV7wbQST4nY/icon
import CrossSvgrepoComsvgIcon from "./icons/PlasmicIcon__CrossSvgrepoComsvg"; // plasmic-import: dU3DbxgzE4et/icon
import GuiCheckYesSvgrepoComsvgIcon from "./icons/PlasmicIcon__GuiCheckYesSvgrepoComsvg"; // plasmic-import: 6aR419TIWeTl/icon
import mohammadFarahani32Jpg82MHnOHcgV from "./images/mohammadFarahani32Jpg.jpg"; // plasmic-import: 82MHnO_HcgV-/picture

createPlasmicElementProxy;

export type PlasmicAnswer__VariantMembers = {};
export type PlasmicAnswer__VariantsArgs = {};
type VariantPropType = keyof PlasmicAnswer__VariantsArgs;
export const PlasmicAnswer__VariantProps = new Array<VariantPropType>();

export type PlasmicAnswer__ArgsType = {};
type ArgPropType = keyof PlasmicAnswer__ArgsType;
export const PlasmicAnswer__ArgProps = new Array<ArgPropType>();

export type PlasmicAnswer__OverridesType = {
  root?: Flex__<"div">;
  img?: Flex__<typeof PlasmicImg__>;
};

export interface DefaultAnswerProps {
  className?: string;
}

const $$ = {};

function PlasmicAnswer__RenderFunc(props: {
  variants: PlasmicAnswer__VariantsArgs;
  args: PlasmicAnswer__ArgsType;
  overrides: PlasmicAnswer__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div className={classNames(projectcss.all, sty.columns__igTt)}>
        <div className={classNames(projectcss.all, sty.column__bJ4Mh)}>
          <div className={classNames(projectcss.all, sty.freeBox__ickPe)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__pXlvF
              )}
            >
              {
                "\u0645\u062d\u0645\u062f \u0641\u0631\u0627\u0647\u0627\u0646\u06cc"
              }
            </div>
            <PlasmicImg__
              data-plasmic-name={"img"}
              data-plasmic-override={overrides.img}
              alt={""}
              className={classNames(sty.img)}
              displayHeight={"20px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"20px"}
              loading={"lazy"}
              src={{
                src: mohammadFarahani32Jpg82MHnOHcgV,
                fullWidth: 640,
                fullHeight: 640,
                aspectRatio: undefined
              }}
            />
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.column__byN)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__wJcQn
            )}
          >
            {
              "\u0628\u0631\u0627\u06cc \u0627\u0646\u062a\u062e\u0627\u0628 \u0631\u0648\u063a\u0646 \u0645\u0648\u062a\u0648\u0631 \u0645\u0646\u0627\u0633\u0628 \u0628\u0631\u0627\u06cc \u067e\u0698\u0648 \u06f2\u06f0\u06f6 \u062a\u06cc\u067e \u06f2\u060c \u0639\u0648\u0627\u0645\u0644 \u0645\u062e\u062a\u0644\u0641\u06cc \u0627\u0632 \u062c\u0645\u0644\u0647 \u0646\u0648\u0639 \u0645\u0648\u062a\u0648\u0631\u060c \u0634\u0631\u0627\u06cc\u0637 \u0622\u0628 \u0648 \u0647\u0648\u0627\u06cc\u06cc \u0645\u0646\u0637\u0642\u0647\u060c \u0648 \u062a\u0648\u0635\u06cc\u0647\u200c\u0647\u0627\u06cc \u062f\u0641\u062a\u0631\u0686\u0647 \u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u062e\u0648\u062f\u0631\u0648 \u0628\u0627\u06cc\u062f \u062f\u0631 \u0646\u0638\u0631 \u06af\u0631\u0641\u062a\u0647 \u0634\u0648\u062f. \u0628\u0631 \u0627\u0633\u0627\u0633 \u0646\u0638\u0631\u0627\u062a \u06a9\u0627\u0631\u0628\u0631\u0627\u0646\u060c \u0628\u0631\u0627\u06cc \u0645\u0648\u062a\u0648\u0631 TU3 \u06a9\u0647 \u062f\u0631 \u06f2\u06f0\u06f6 \u062a\u06cc\u067e \u06f2 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0645\u06cc\u200c\u0634\u0648\u062f\u060c \u062f\u0631 \u0645\u0646\u0627\u0637\u0642 \u06af\u0631\u0645\u0633\u06cc\u0631 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0631\u0648\u063a\u0646 \u0645\u0648\u062a\u0648\u0631 \u06f2\u06f0W-50 \u0628\u0627 \u06a9\u06cc\u0641\u06cc\u062a SL \u0628\u0647 \u0628\u0627\u0644\u0627 \u062a\u0648\u0635\u06cc\u0647 \u0645\u06cc\u200c\u0634\u0648\u062f\u060c \u062f\u0631 \u062d\u0627\u0644\u06cc \u06a9\u0647 \u062f\u0631 \u0645\u0646\u0627\u0637\u0642 \u0633\u0631\u062f\u0633\u06cc\u0631\u060c \u0631\u0648\u063a\u0646 \u06f1\u06f0W-40 \u0645\u0646\u0627\u0633\u0628\u200c\u062a\u0631 \u0627\u0633\u062a. \u2600\ufe0f\u2744\ufe0f \u0647\u0645\u0686\u0646\u06cc\u0646\u060c \u0628\u0631\u0646\u062f\u0647\u0627\u06cc\u06cc \u0645\u0627\u0646\u0646\u062f \u0628\u0647\u0631\u0627\u0646 (Behran Super Rana Plus)\u060c \u06a9\u0627\u0633\u062a\u0631\u0648\u0644 (Castrol)\u060c \u0648 \u0647\u06cc\u0648\u0646\u062f\u0627\u06cc (Hyundai) \u0628\u0627 \u06af\u0631\u06cc\u062f SN \u067e\u06cc\u0634\u0646\u0647\u0627\u062f \u0634\u062f\u0647\u200c\u0627\u0646\u062f. \u0645\u0647\u0645 \u0627\u0633\u062a \u06a9\u0647 \u0647\u0646\u06af\u0627\u0645 \u0627\u0646\u062a\u062e\u0627\u0628 \u0631\u0648\u063a\u0646 \u0645\u0648\u062a\u0648\u0631\u060c \u0628\u0647 \u062a\u0648\u0635\u06cc\u0647\u200c\u0647\u0627\u06cc \u062f\u0641\u062a\u0631\u0686\u0647 \u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u062e\u0648\u062f\u0631\u0648 \u0648 \u0647\u0645\u0686\u0646\u06cc\u0646 \u0628\u0647 \u06a9\u0627\u0631\u06a9\u0631\u062f \u0648 \u0634\u0631\u0627\u06cc\u0637 \u0641\u0639\u0644\u06cc \u0645\u0648\u062a\u0648\u0631 \u062a\u0648\u062c\u0647 \u0634\u0648\u062f \u062a\u0627 \u0627\u0632 \u0639\u0645\u0644\u06a9\u0631\u062f \u0628\u0647\u06cc\u0646\u0647 \u0645\u0648\u062a\u0648\u0631 \u0648 \u0637\u0648\u0644 \u0639\u0645\u0631 \u0628\u06cc\u0634\u062a\u0631 \u0622\u0646 \u0627\u0637\u0645\u06cc\u0646\u0627\u0646 \u062d\u0627\u0635\u0644 \u0634\u0648\u062f. \ud83d\udcd8\ud83d\udee2\ufe0f"
            }
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.column___8NiWc)}>
          <div className={classNames(projectcss.all, sty.freeBox__c7Wnm)}>
            <div className={classNames(projectcss.all, sty.columns__vldFg)}>
              <div className={classNames(projectcss.all, sty.column__q5Q3X)}>
                <div className={classNames(projectcss.all, sty.freeBox__g2Ese)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kCwDq
                    )}
                  >
                    {
                      "\u0627\u0634\u062a\u0631\u0627\u06a9\u200c\u06af\u0630\u0627\u0631\u06cc"
                    }
                  </div>
                  <ShareSvgrepoComsvgIcon
                    className={classNames(projectcss.all, sty.svg___27ZVm)}
                    role={"img"}
                  />
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column__aPjaH)} />

              <div className={classNames(projectcss.all, sty.column__ppVc)}>
                <div className={classNames(projectcss.all, sty.freeBox__smumb)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___79JRf)}
                  >
                    <CrossSvgrepoComsvgIcon
                      className={classNames(projectcss.all, sty.svg__d5B2D)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__dyipr)}
                  >
                    <GuiCheckYesSvgrepoComsvgIcon
                      className={classNames(projectcss.all, sty.svg__fojfq)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__o4PHn
                    )}
                  >
                    {
                      "\u062c\u0648\u0627\u0628 \u0633\u0648\u0627\u0644\u062a \u0631\u0648 \u06af\u0631\u0641\u062a\u06cc\u061f"
                    }
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "img"],
  img: ["img"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  img: typeof PlasmicImg__;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicAnswer__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicAnswer__VariantsArgs;
    args?: PlasmicAnswer__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicAnswer__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicAnswer__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicAnswer__ArgProps,
          internalVariantPropNames: PlasmicAnswer__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicAnswer__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAnswer";
  } else {
    func.displayName = `PlasmicAnswer.${nodeName}`;
  }
  return func;
}

export const PlasmicAnswer = Object.assign(
  // Top-level PlasmicAnswer renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    img: makeNodeComponent("img"),

    // Metadata about props expected for PlasmicAnswer
    internalVariantProps: PlasmicAnswer__VariantProps,
    internalArgProps: PlasmicAnswer__ArgProps
  }
);

export default PlasmicAnswer;
/* prettier-ignore-end */
